name: Snap Schedule

on:
  workflow_dispatch:
  push:
    branches:
      - v2
  schedule:
    # run every 4 hours at 10 minutes past the hour
    - cron: '10 */4 * * *'

jobs:
  snap:
    name: Invoke Snap
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - { arch: universal,            os: ubuntu-latest, is_core: true }
          - { arch: x86_64-unknown-linux, os: ubuntu-latest                }
          - { arch: x86_64-pc-windows,    os: windows-latest               }
          - { arch: aarch64-apple-darwin, os: macos-latest                 }
          - { arch: x86_64-apple-darwin,  os: macos-13                     }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Deployed
        uses: actions/checkout@v4
        with:
          repository: chawyehsu/moonbit-binaries
          ref: gh-pages
          path: ./tmp/dist

      - name: Snap Core
        if: ${{ matrix.is_core == true }}
        shell: pwsh
        run: ./snapV2.ps1

      - name: Upload Core
        if: ${{ matrix.is_core == true }}
        uses: actions/upload-artifact@v4
        with:
          name: component-moonbit-core
          path: ./tmp/gha-artifacts/*

      - name: Snap Toolchain
        if: ${{ matrix.is_core != true }}
        shell: pwsh
        run: ./snapV2.ps1 -SnapToolchain

      - name: Upload Toolchain
        if: ${{ matrix.is_core != true }}
        uses: actions/upload-artifact@v4
        with:
          name: component-moonbit-toolchain-${{ matrix.arch }}
          path: ./tmp/gha-artifacts/*

  merge:
    needs: snap
    name: Deploy Index
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Deployed
        uses: actions/checkout@v4
        with:
          repository: chawyehsu/moonbit-binaries
          ref: gh-pages
          path: ./tmp/dist

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./tmp/gha-artifacts
          pattern: component-*
          merge-multiple: true

      - name: Merge Index
        id: merge_index
        shell: pwsh
        run: ./snapV2.ps1 -Merge && "SHOULD_DEPLOY=1" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          path: ./tmp/dist
          base: gh-pages
          title: "chore: update index"
          commit-message: "chore: update index"
          signoff: true
          draft: true

      # - name: Deploy Index
      #   uses: peaceiris/actions-gh-pages@v4
      #   if: ${{ steps.merge_index.outputs.SHOULD_DEPLOY }}
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./dist
      #     user_name: 'github-actions[bot]'
      #     user_email: 'github-actions[bot]@users.noreply.github.com'
      #     commit_message: deployed
      #     keep_files: true

      # - name: Download Binaries
      #   if: ${{ steps.merge_index.outputs.SHOULD_DEPLOY }}
      #   uses: actions/download-artifact@v4
      #   with:
      #     path: ./dist
      #     pattern: dist-*.zip
      #     merge-multiple: true

      # - name: Validate Binaries
      #   id: validate
      #   if: ${{ steps.merge_index.outputs.SHOULD_DEPLOY }}
      #   shell: pwsh
      #   run: |
      #     $tag = (Get-Content -Path ./dist/index.json -Raw | ConvertFrom-Json -AsHashtable).'core'.releases[0].version
      #     $tagDir = "./dist/$tag"
      #     if (Test-Path $tagDir) {
      #       "TAG=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      #     }

      # - name: Create Release
      #   uses: softprops/action-gh-release@v2
      #   if: ${{ steps.validate.outputs.TAG }}
      #   with:
      #     tag_name: v${{ steps.validate.outputs.TAG }}
      #     body: MoonBit release v${{ steps.validate.outputs.TAG }} archived
      #     files: |
      #       ./dist/${{ steps.validate.outputs.TAG }}/*
      #       ./dist/core/moonbit-core-v${{ steps.validate.outputs.TAG }}.zip*

      # - name: Cleanup
      #   uses: geekyeggo/delete-artifact@v5
      #   with:
      #     name: |
      #       index-*.json
      #       dist-*.zip
