name: Snap Schedule

on:
  workflow_dispatch:
    inputs:
      force:
        description: Force snap even if up-to-date
        type: boolean
        default: false
  push:
    branches:
      - main
  schedule:
    # run every 6 hours at 10 minutes past the hour
    - cron: '10 */6 * * *'

jobs:
  snap:
    name: Invoke Snap
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: core, os: ubuntu-latest, core: true }
          - { name: linux-x64, os: ubuntu-latest }
          - { name: win-x64, os: windows-latest }
          - { name: darwin-arm64, os: macos-latest }
          - { name: darwin-x64, os: macos-13 }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Snap Core
        if: ${{ matrix.core == true }}
        shell: pwsh
        run: ./snap.ps1 -Force:$${{ github.event.inputs.force && 'true' || 'false' }}

      - name: Snap Toolchain
        if: ${{ matrix.core != true }}
        shell: pwsh
        run: ./snap.ps1 -SnapToolchain -Force:$${{ github.event.inputs.force && 'true' || 'false' }}

      - name: Upload Index
        uses: actions/upload-artifact@v4
        with:
          name: index-${{ matrix.name }}.json
          path: ./tmp/index-${{ matrix.name }}.json

      - name: Upload Binaries
        if: ${{ matrix.core == true }}
        uses: actions/upload-artifact@v4
        with:
          name: dist-core.zip
          path: |
            ./dist
            !./dist/index.json

      - name: Upload Binaries
        if: ${{ matrix.core != true }}
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.name }}.zip
          path: |
            ./dist
            !./dist/index.json

  merge:
    needs: snap
    name: Update Index
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Index
        uses: actions/download-artifact@v4
        with:
          path: ./tmp
          pattern: index-*.json
          merge-multiple: true

      - name: Merge Index
        id: merge_index
        shell: pwsh
        run: |
          if (Test-Path ./tmp/index-*.json) {
            "SHOULD_DEPLOY=1" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            ./snap.ps1 -Merge
          }

      - name: Deploy Index
        uses: peaceiris/actions-gh-pages@v4
        if: ${{ steps.merge_index.outputs.SHOULD_DEPLOY }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: deployed
          keep_files: true

      - name: Download Binaries
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          pattern: dist-*.zip
          merge-multiple: true

      - name: Validate Binaries
        id: validate
        shell: pwsh
        run: |
          $tag = (Get-Content -Path ./dist/index.json -Raw | ConvertFrom-Json -AsHashtable).'core'.releases[0].version
          $tagDir = "./dist/$tag"
          if (Test-Path $tagDir) {
            "TAG=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.validate.outputs.TAG }}
        with:
          tag_name: v${{ steps.validate.outputs.TAG }}
          body: MoonBit release v${{ steps.validate.outputs.TAG }} archived
          files: |
            ./dist/${{ steps.validate.outputs.TAG }}/*
            ./dist/core/moonbit-core-v${{ steps.validate.outputs.TAG }}.zip*

      - name: Cleanup
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            index-*.json
            dist-*.zip
