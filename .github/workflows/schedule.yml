name: Snap Schedule

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'The channel to snap'
        default: latest
        required: true
        type: choice
        options:
          - latest
          - nightly
  push:
    branches:
      - v2
      - main
  # schedule:
  #   # run every 4 hours at 10 minutes past the hour
  #   - cron: '10 */4 * * *'

jobs:
  snap:
    name: Invoke Snap
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - { arch: universal,            os: ubuntu-latest, is_core: true }
          - { arch: x86_64-unknown-linux, os: ubuntu-latest                }
          - { arch: x86_64-pc-windows,    os: windows-latest               }
          - { arch: aarch64-apple-darwin, os: macos-latest                 }
          - { arch: x86_64-apple-darwin,  os: macos-13                     }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Deployed
        uses: actions/checkout@v4
        with:
          repository: chawyehsu/moonbit-binaries
          ref: gh-pages
          path: ./tmp/dist

      - name: Snap Core
        if: ${{ matrix.is_core == true }}
        shell: pwsh
        run: ./snapV2.ps1 -Channel ${{ github.event.inputs.channel || 'latest' }}

      - name: Upload Core
        if: ${{ matrix.is_core == true }}
        uses: actions/upload-artifact@v4
        with:
          name: component-moonbit-core
          path: ./tmp/gha-artifacts/*

      - name: Snap Toolchain
        if: ${{ matrix.is_core != true }}
        shell: pwsh
        run: ./snapV2.ps1 -SnapToolchain -Channel ${{ github.event.inputs.channel || 'latest' }}

      - name: Upload Toolchain
        if: ${{ matrix.is_core != true }}
        uses: actions/upload-artifact@v4
        with:
          name: component-moonbit-toolchain-${{ matrix.arch }}
          path: ./tmp/gha-artifacts/*

  merge:
    needs: snap
    name: Deploy Index
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Deployed
        uses: actions/checkout@v4
        with:
          repository: chawyehsu/moonbit-binaries
          ref: gh-pages
          path: ./tmp/dist

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./tmp/gha-artifacts
          pattern: component-*
          merge-multiple: true

      - name: Validate Artifacts
        id: validate_artifacts
        shell: pwsh
        run: |
          if (Test-Path -Path ./tmp/gha-artifacts) {
            $artifacts = Get-ChildItem -Path ./tmp/gha-artifacts -File
            if ($artifacts.Count -gt 0) {
              "SHOULD_MERGE=1" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
              return
            }
          }
          Write-Host "No artifacts found."
          "SHOULD_MERGE=0" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Merge Index
        id: merge_index
        if: ${{ steps.validate_artifacts.outputs.SHOULD_MERGE }}
        shell: pwsh
        run: ./snapV2.ps1 -Merge -Channel ${{ github.event.inputs.channel || 'latest' }} && "SHOULD_DEPLOY=1" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     path: ./tmp/dist
      #     base: gh-pages
      #     title: "chore: update index"
      #     commit-message: "chore: update index"

      - name: Generate Release Tag
        id: generate_tag
        if: ${{ steps.merge_index.outputs.SHOULD_DEPLOY }}
        shell: pwsh
        run: |
          $channels = (Get-Content -Path ./tmp/dist/v2/index.json -Raw | ConvertFrom-Json -AsHashtable).channels
          $tag = switch ('${{ github.event.inputs.channel || 'latest' }}') {
            'latest' {
              $version = $channels | Where-Object { $_.name -eq 'latest' } | Select-Object -ExpandProperty version -First 1
              "v$version"
            }
            'nightly' {
              $date = $channels | Where-Object { $_.name -eq 'nightly' } | Select-Object -ExpandProperty date -First 1
              "nightly-$date"
            }
          }
          # Remove component index json
          Remove-Item -Path ./tmp/gha-artifacts/*.json -Force
          "TAG=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.repository == 'chawyehsu/moonbit-binaries' && github.ref == 'refs/heads/main' && steps.generate_tag.outputs.TAG }}
        with:
          tag_name: ${{ steps.generate_tag.outputs.TAG }}
          body: "MoonBit release ${{ steps.generate_tag.outputs.TAG }} (channel: ${{ github.event.inputs.channel || 'latest' }}) was archived."
          files: |
            ./tmp/gha-artifacts/*${{ steps.generate_tag.outputs.TAG }}*

      - name: Deploy Index
        uses: peaceiris/actions-gh-pages@v4
        if: ${{ github.repository == 'chawyehsu/moonbit-binaries' && github.ref == 'refs/heads/main' && steps.generate_tag.outputs.TAG }}
        with:
          # external_repository: chawyehsu/moonbit-binaries
          # personal_token: ${{ secrets.PERSONAL_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./tmp/dist
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: update index
          keep_files: true

      # - name: Cleanup
      #   uses: geekyeggo/delete-artifact@v5
      #   with:
      #     name: '*'
